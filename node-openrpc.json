{
  "openrpc": "1.2.4",
  "info": {
    "title": "Query & Transact Advanced Query APIs (preview)",
    "version": "0.0.1",
    "description": "This document describes the preview APIs for Query and Transact's new Advanced Query APIs. See the [main Query and Transact documentation](https://docs.cloud.coinbase.com/blockchain-infrastructure/docs) for more information about Query and Transact. \n\n These APIs allow greater... TBD SHANA \n\n **API constraints:** \n - Only Ethereum protocol and mainnet (and testnet) networks are supported in this preview version of the APIs. Ethereum L2 chains and other protocols will be supported incrementally. \n - This preview version of the APIs only supports ETH, ERC-20 and ERC-721 tokens. \n   - The Balances and Contracts APIs only return results for ERC-20 and ERC-721 tokens. \n   - In the Transfers APIs, some metadata in the results might be available for ERC-20 and ERC-721 only. "
  },
  "servers": [
    {
      "name": "Server URL and API token info",
      "url": "https://mainnet.ethereum.coinbasecloud.io/rpc TBD SHANA",
      "description": "**Authentication:** \n\n This endpoint uses HTTP Basic Auth <TBD SHANA VERIFY>. \n\n To authenticate to these APIs: \n\n - Grab your username and API access token from the Cloud Portal <TBD SHANA WHATS THE NAME OF THE PLATFORM PORTAL> \n - Include your username and API access token (as your username and password, respectively) as `auth` in each HTTP request"
    }
  ],
  "methods": [
    {
      "name": "coinbaseCloud_getBalances",
      "paramStructure": "by-name",
      "summary": "Get balance for multiple account addresses across one or more tokens",
      "description": "Get accurate balance for multiple account addresses across one or more tokens within a single blockchain and network. The balance incorporates transactions, internal transfers and all supported token transfers. Supports ERC-20 and ERC-721. This API is meant to be our primary API to get balances. A more simple and lower latency API that just fetches balance for a single address and token is `getSingleBalance`. \n\n **Use cases:**\n - Get balances for one or many addresses in a single call \n - Get balances for all the tokens an account address may hold \n - Get balances for all the tokens a contract may hold  \n\n\n **Constraints:** \n - Only up to 10 addresses are supported per API call. Only up to 10 tokens are supported per address per API call. These limits will be increased with pagination support incrementally. \n - Balances can be fetched for a single protocol and network using this API. Future variants may support fetching balance across networks for a protocol, or even across all supported protocols.",
      "tags": [
        {
          "name": "balances"
        }
      ],
      "params": [
        {
          "name": "addressAndContractList",
          "summary": "List of addresses and token identifiers",
          "description": "List of account or contact addresses and token identifiers. For Ethereum the token identifier is the token contract address.",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AddressAndContractList"
          }
        },
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "balances",
        "summary": "Returned list of balance amounts",
        "description": "A list of balance amounts for the given token identifier and Block range in which the balances were computed. Note that Start is always genesis for this API.",
        "schema": {
          "$ref": "#/components/schemas/GetBalancesResponse"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "USDC & DAI (ERC-20)",
          "summary": "Retrieve balances for USDC and DAI",
          "params": [
            {
              "name": "addressAndContractList",
              "value": [
                {
                  "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
                  "contract": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                },
                {
                  "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
                  "contract": "0x6b175474e89094c44da98b954eedeac495271d0f"
                }
              ]
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "balances",
            "value": [
              {
                "blockHeight": 14794598,
                "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
                "tokenBalances": [
                  {
                    "contract": "0x6b175474e89094c44da98b954eedeac495271d0f",
                    "amount": 1871941363914734149,
                    "decimals": 18
                  },
                  {
                    "contract": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                    "amount": 64014142,
                    "decimals": 6
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "NFT (ERC-721)",
          "summary": "Retrieve NFT tokens",
          "params": [
            {
              "name": "addressAndContractList",
              "value": [
                {
                  "address": "0xa3e90da6c1d5ea0b1b4e881d1eaaaaaaf3c25cc2",
                  "contract": "0x5180db8F5c931aaE63c74266b211F580155ecac8"
                }
              ]
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "balances",
            "value": [
              {
                "blockHeight": 14794052,
                "address": "0xa3e90da6c1d5ea0b1b4e881d1eaaaaaaf3c25cc2",
                "tokenBalances": [
                  {
                    "contract": "0x5180db8F5c931aaE63c74266b211F580155ecac8",
                    "amount": 3,
                    "decimals": 1
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "coinbaseCloud_getSingleBalance",
      "paramStructure": "by-name",
      "summary": "Get balance for a single token and a single account address",
      "description": "Get an accurate balance for a single token and a single account address. The balance takes into account transactions, internal transfers and any supported token transfers. The caller should expect low latency from this API compared to a more heavy weight GetBalances. \n\n **Use cases:** \n - Low latency call to get the latest balance for a single token for a single address. \n - Get balances for an account address or a contract",
      "tags": [
        {
          "name": "balances"
        }
      ],
      "params": [
        {
          "name": "address",
          "summary": "Account address",
          "description": "Can be an account address or a contract address.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "contract",
          "summary": "Token identifier",
          "description": "Token identifier. For Ethereum the token identifier is the token contract address.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "balance",
        "summary": "Returned balance",
        "description": "Balance of the native cryptocurrency (ETH, BTC, etc) for the blockchain and network: Amount and Unit (e.g. wei, satoshi). Balance is returned in the smallest possible unit.",
        "schema": {
          "$ref": "#/components/schemas/GetSingleBalanceResponse"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "USDC (ERC-20)",
          "summary": "Retrieve balances for USDC",
          "params": [
            {
              "name": "address",
              "value": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d"
            },
            {
              "name": "contract",
              "value": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "balance",
            "value": {
              "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
              "tokenBalance": {
                "contract": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                "amount": 64014142,
                "decimals": 6
              }
            }
          }
        },
        {
          "name": "NFT (ERC-721)",
          "summary": "Retrieve NFT tokens",
          "params": [
            {
              "name": "address",
              "value": "0xa3e90da6c1d5ea0b1b4e881d1eaaaaaaf3c25cc2"
            },
            {
              "name": "contract",
              "value": "0x5180db8F5c931aaE63c74266b211F580155ecac8"
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "balance",
            "value": {
              "address": "0xa3e90da6c1d5ea0b1b4e881d1eaaaaaaf3c25cc2",
              "tokenBalance": {
                "contract": "0x5180db8F5c931aaE63c74266b211F580155ecac8",
                "amount": 3,
                "decimals": 1
              }
            }
          }
        }
      ]
    },
    {
      "name": "coinbaseCloud_getTokenAllowances",
      "paramStructure": "by-name",
      "summary": "Get allowances for a specified owner and spender",
      "description": "Get allowances for a specified owner and spender across one or more tokens within a single blockchain and network. \n\n **Use cases:** \n - Get Allowance given to another account for one or more tokens \n - Get Allowances for all the tokens an account address may hold",
      "tags": [
        {
          "name": "balances"
        }
      ],
      "params": [
        {
          "name": "allowances",
          "summary": "Owner addresses, spender addresses, and token identifiers.",
          "description": "List of owner addresses, spender addresses, and token identifiers. For Ethereum, the token identifier is the token contract address.",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Allowances"
          }
        },
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "allowances",
        "summary": "Returned list of allowances",
        "description": "List of allowances, including owner address, spender address, the block range in which the balances were computed (start is genesis), and a list of allowance information.",
        "schema": {
          "$ref": "#/components/schemas/GetTokenAllowancesResponse"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "USDT (ERC-20)",
          "summary": "Retrieve allowances for USDT",
          "params": [
            {
              "name": "allowances",
              "value": [
                {
                  "owner": "0xa646147bda82a866eba03568f363fc9c90185c6e",
                  "spender": "0xadd0e097b961572b2a1f5de572c622eef97e3d82",
                  "contracts": [
                    "0xdac17f958d2ee523a2206206994597c13d831ec7"
                  ]
                }
              ]
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "allowances",
            "value": [
              {
                "blockHeight": 14794058,
                "owner": "0xa646147bda82a866eba03568f363fc9c90185c6e",
                "spender": "0xadd0e097b961572b2a1f5de572c622eef97e3d82",
                "tokenAllowances": [
                  {
                    "contract": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                    "amount": 1443590544794273757,
                    "decimals": 6
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "coinbaseCloud_getTransactionsByAddress",
      "paramStructure": "by-name",
      "summary": "Get transactions for a given address.",
      "description": "Returns external transactions, internal transactions (triggered by smart contracts) and token transfers for a given address. Includes activity from and to the input address. Returns the transactions in reverse chronological order. \n\n This API guarantees that all relevant transactions and transfers for a single block are returned in a single call. \n\n **Use cases:** \n - Get all the transactions (external and internal) for a given address \n - Get all token transfers for a given address \n - Get transactions and/or transfers in specific block ranges \n - Filter transactions by send and/or receive \n\n\n **Constraints:** \n\n - The API returns upto 1000 transactions and transfers combined OR all the relevant transactions and transfers within a single block; whichever is higher. \n - Static calls among smart contracts can result in zero balance transfers in Ethereum. Such transfers are excluded from the output. \n\n\n **Pagination support:** \n\n Clients can use block ranges to iterate through transactions and transfers if there are more than 1000. \n\n E.g., a client wants to get all the transactions from genesis to the latest block. In this example, assume 100 is the latest block: \n\n |API Calls|Input|Output|\n|-|-|-|\n|1|Block range: 0 -> latest,|Block range scanned: *98* -> 100|\n|2|Block range: 0 -> *97*,|Block range scanned: **34** -> 97|\n|3|Block range: 0 -> **33**,|Block range scanned: 0 -> 33|\n Done. All data is returned for the range 0 -> 100.",
      "tags": [
        {
          "name": "transfers"
        }
      ],
      "params": [
        {
          "name": "address",
          "summary": "Account address",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "blockStart",
          "summary": "Start of block range to scan for transactions",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "blockEnd",
          "summary": "End of block range to scan for transactions",
          "description": "Defaults to latest. See **Pagination support** for more information",
          "required": false,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "addressFilter",
          "summary": "Filter transactions by",
          "description": "Filter transactions such that the address is SENDER_ONLY, RECEIVER_ONLY or SENDER_OR_RECEIVER. Defaults to SENDER_OR_RECEIVER.",
          "required": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "result",
        "summary": "Returned transactions",
        "description": "Returns a list of blocks for which transactions were found, each with a list of external transactions found for the address in that block.",
        "schema": {
          "$ref": "#/components/schemas/GetTransactionsByAddressResponse"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "ERC-20 with pagination",
          "summary": "Retrieve transactions for ERC-20 tokens. This example shows pagination.",
          "params": [
            {
              "name": "address",
              "value": "0x3cd751e6b0078be393132286c442345e5dc49699"
            },
            {
              "name": "blockStart",
              "value": 14431488
            },
            {
              "name": "blockEnd",
              "value": 14431489
            },
            {
              "name": "addressFilter",
              "value": "SENDER_OR_RECEIVER"
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "blockStart": 14431488,
              "blockEnd": 14431489,
              "blocks": [
                {
                  "blockHash": "0x2c52d4bb68c6e56272974d21bd5afc7a01ec33093249d9d5ec0b74048a8389d5",
                  "blockNumber": 14431489,
                  "blockTimestamp": 1647889630,
                  "transactions": [
                    {
                      "transactionHash": "0x07160e2164087a3812abbe5e74109be176b0650bbe4be44f4e280fe3ee221a6d",
                      "transactionIndex": 61,
                      "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                      "to": "0x912a523a10e052900b571889b07ff4f2fd86e029",
                      "value": "157704540000000000",
                      "gasLimit": 21000,
                      "gasPrice": 35105275699,
                      "gasUsed": 21000,
                      "status": "1",
                      "input": "0x",
                      "nonce": 6843177,
                      "blockHash": "0x2c52d4bb68c6e56272974d21bd5afc7a01ec33093249d9d5ec0b74048a8389d5",
                      "blockNumber": 14431489,
                      "blockTimestamp": 1647889630,
                      "internalTransactions": [
                        {
                          "traceType": "CALL",
                          "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                          "to": "0x912a523a10e052900b571889b07ff4f2fd86e029",
                          "value": "157704540000000000"
                        }
                      ]
                    },
                    {
                      "transactionHash": "0x8409c799d35dbb1500f7083f99a7373aee8308bf39e543a95a9de16e70315d31",
                      "transactionIndex": 74,
                      "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                      "to": "0x3f54e2d84e42b113af00ab489c01adb0c5cf62d2",
                      "value": "24776000000000000",
                      "gasLimit": 21000,
                      "gasPrice": 35105275699,
                      "gasUsed": 21000,
                      "status": "1",
                      "input": "0x",
                      "nonce": 6843178,
                      "blockHash": "0x2c52d4bb68c6e56272974d21bd5afc7a01ec33093249d9d5ec0b74048a8389d5",
                      "blockNumber": 14431489,
                      "blockTimestamp": 1647889630,
                      "internalTransactions": [
                        {
                          "traceType": "CALL",
                          "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                          "to": "0x3f54e2d84e42b113af00ab489c01adb0c5cf62d2",
                          "value": "24776000000000000"
                        }
                      ]
                    }
                  ]
                },
                {
                  "blockHash": "0x1939a88b2da89f1512e134e6d17a08e71c7fcd352cff2ddee942c4d79140055f",
                  "blockNumber": 14431488,
                  "blockTimestamp": 1647889625,
                  "transactions": [
                    {
                      "transactionHash": "0x8e7012bccb57ed34fb576868a5376f4983f243e41664bf20220efc1d19006d52",
                      "transactionIndex": 55,
                      "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                      "to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                      "value": "0",
                      "gasLimit": 250000,
                      "gasPrice": 37505027916,
                      "gasUsed": 63209,
                      "status": "1",
                      "input": "0xa9059cbb000000000000000000000000aaadde03849e05ef4425b750a680168bfc0fa08a00000000000000000000000000000000000000000000000000000000281ba3a0",
                      "nonce": 6843176,
                      "blockHash": "0x1939a88b2da89f1512e134e6d17a08e71c7fcd352cff2ddee942c4d79140055f",
                      "blockNumber": 14431488,
                      "blockTimestamp": 1647889625,
                      "internalTransactions": [
                        {
                          "traceType": "CALL",
                          "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                          "to": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                          "value": "0",
                          "gasLimit": 228392
                        }
                      ],
                      "tokenTransfers": [
                        {
                          "tokenAddress": "0xdac17f958d2ee523a2206206994597c13d831ec7",
                          "tokenType": "erc20",
                          "from": "0x3cd751e6b0078be393132286c442345e5dc49699",
                          "to": "0xaaadde03849e05ef4425b750a680168bfc0fa08a",
                          "value": "672900000"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "coinbaseCloud_getTransfersByAddress",
      "paramStructure": "by-name",
      "summary": "Get transactions for a given address.",
      "description": "Returns token transfers for a given address. Includes activity from and to the input address. Returns the transfers in reverse chronological order. \n\n **Use cases:** \n - Get all token transfers for a given address \n - Get token transfers in specific block ranges \n\n\n **Constraints:** \n\n - The API returns up to 1000 token transfers OR all the token transfers within a single block; whichever is higher. <TBD SHANA THIS IS REALLY CONFUSING. GET CLARITY> \n - Static calls among smart contracts can result in zero balance transfers in Ethereum. Such transfers are excluded from the output. <TBD SHANA IS THIS RELEVANT FOR THIS API??> \n\n\n **Pagination support:** \n\n Clients can use block ranges to iterate through transactions and transfers if there are more than 1000. \n\n E.g., a client wants to get all the transactions from genesis to the latest block. In this example, assume 100 is the latest block: \n\n |API Calls|Input|Output|\n|-|-|-|\n|1|Block range: 0 -> latest,|Block range scanned: *98* -> 100|\n|2|Block range: 0 -> *97*,|Block range scanned: **34** -> 97|\n|3|Block range: 0 -> **33**,|Block range scanned: 0 -> 33|\n Done. All data is returned for the range 0 -> 100.",
      "tags": [
        {
          "name": "transfers"
        }
      ],
      "params": [
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "address",
          "summary": "Account address",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "blockStart",
          "summary": "Start of block range to scan for transactions",
          "description": "",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "blockEnd",
          "summary": "End of block range to scan for transactions",
          "description": "Defaults to latest. See **Pagination support** for more information",
          "required": false,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "addressFilter",
          "summary": "Filter transactions by",
          "description": "Filter transactions such that the address is SENDER_ONLY, RECEIVER_ONLY or SENDER_OR_RECEIVER. Defaults to SENDER_OR_RECEIVER.",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "result",
        "summary": "Returned transactions",
        "description": "Returns a list of blocks for which transactions were found, each with a list of token transfers found for the address in that block.",
        "schema": {
          "$ref": "#/components/schemas/GetTransfersByAddressResponse"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "ERC-20 and ERC-721 token transfers",
          "summary": "Return all ERC-20 and ERC-721 token transfers to the burn wallet",
          "params": [
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            },
            {
              "name": "address",
              "value": "0x0000000000000000000000000000000000000000"
            },
            {
              "name": "blockStart",
              "value": 1
            },
            {
              "name": "blockEnd",
              "value": 14355891
            },
            {
              "name": "addressFilter",
              "value": "RECEIVER_ONLY"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "blockStart": 14355514,
              "blockEnd": 14355891,
              "blocks": [
                {
                  "blockHash": "0x84210a366e05d2cb7ac1674901e259620c5485ccfa079618c2b07d5c5466dc3d",
                  "blockNumber": 14355891,
                  "blockTimestamp": 1646872195,
                  "tokenTransfers": [
                    {
                      "tokenAddress": "0xb5de0c3753b6e1b4dba616db82767f17513e6d4e",
                      "tokenType": "erc20",
                      "from": "0xb5de0c3753b6e1b4dba616db82767f17513e6d4e",
                      "to": "0x0000000000000000000000000000000000000000",
                      "value": "20171572165639639738",
                      "transactionHash": "0xdb7590bf6069127301ceeebf1b0f33bf483e08a37fc321e48eadbfaf4fb595fb",
                      "transactionIndex": 72
                    },
                    {
                      "tokenAddress": "0xb8f5eba1a53d27a06c9c993d832d945ce20a31ec",
                      "tokenType": "erc20",
                      "from": "0x0000000000000000000000000000000000000000",
                      "to": "0x0000000000000000000000000000000000000000",
                      "value": "30266372230497121",
                      "transactionHash": "0xa9a74e3442be5815ef7adc4568f8dc3e0b32787aec6d2c891866888d51f223d8",
                      "transactionIndex": 102
                    }
                  ]
                },
                {
                  "blockHash": "0x4e47bb9444336af0587a7e8138556eff722b8df2d3410385e37360cc831a3f1c",
                  "blockNumber": 14355889,
                  "blockTimestamp": 1646872172,
                  "tokenTransfers": [
                    {
                      "tokenAddress": "0x030ba81f1c18d280636f32af80b9aad02cf0854e",
                      "tokenType": "erc20",
                      "from": "0xcc9a0b7c43dc2a5f023bb9b738e45b0ef6b06e04",
                      "to": "0x0000000000000000000000000000000000000000",
                      "value": "336269772487705777",
                      "transactionHash": "0x13b84e1a6f87459ee7dd58b6c0bd5758902c146a5fb343ee68ec8322a1a7ad1a",
                      "transactionIndex": 181
                    },
                    {
                      "tokenAddress": "0xc71a726d390bf02b4af8920c0820970310d0f367",
                      "tokenType": "erc721",
                      "from": "0xe6cd4727a1058e6973e973986d0493f1e7975ef8",
                      "to": "0x0000000000000000000000000000000000000000",
                      "tokenID": "43043",
                      "transactionHash": "0xce24394b751343a7cccd6dce38761a36653d29c054f5bb2937dc4c11b895d6ee",
                      "transactionIndex": 180
                    },
                    {
                      "tokenAddress": "0xc71a726d390bf02b4af8920c0820970310d0f367",
                      "tokenType": "erc721",
                      "from": "0xe6cd4727a1058e6973e973986d0493f1e7975ef8",
                      "to": "0x0000000000000000000000000000000000000000",
                      "tokenID": "12385",
                      "transactionHash": "0xce24394b751343a7cccd6dce38761a36653d29c054f5bb2937dc4c11b895d6ee",
                      "transactionIndex": 180
                    },
                    {
                      "tokenAddress": "0xc71a726d390bf02b4af8920c0820970310d0f367",
                      "tokenType": "erc721",
                      "from": "0xe6cd4727a1058e6973e973986d0493f1e7975ef8",
                      "to": "0x0000000000000000000000000000000000000000",
                      "tokenID": "67627",
                      "transactionHash": "0xce24394b751343a7cccd6dce38761a36653d29c054f5bb2937dc4c11b895d6ee",
                      "transactionIndex": 180
                    },
                    {
                      "tokenAddress": "0xc71a726d390bf02b4af8920c0820970310d0f367",
                      "tokenType": "erc721",
                      "from": "0xe6cd4727a1058e6973e973986d0493f1e7975ef8",
                      "to": "0x0000000000000000000000000000000000000000",
                      "tokenID": "38323",
                      "transactionHash": "0xce24394b751343a7cccd6dce38761a36653d29c054f5bb2937dc4c11b895d6ee",
                      "transactionIndex": 180
                    },
                    {
                      "tokenAddress": "0xc71a726d390bf02b4af8920c0820970310d0f367",
                      "tokenType": "erc721",
                      "from": "0xe6cd4727a1058e6973e973986d0493f1e7975ef8",
                      "to": "0x0000000000000000000000000000000000000000",
                      "tokenID": "65064",
                      "transactionHash": "0xce24394b751343a7cccd6dce38761a36653d29c054f5bb2937dc4c11b895d6ee",
                      "transactionIndex": 180
                    },
                    {
                      "tokenAddress": "0x8793cd84c22b94b1fdd3800f02c4b1dcca40d50b",
                      "tokenType": "erc20",
                      "from": "0x3641ef18240a46337818f98005cbb190c4930202",
                      "to": "0x0000000000000000000000000000000000000000",
                      "value": "38078396",
                      "transactionHash": "0xd801007d3194c56061fafe8ae195a82fa7f3a79438719550a60a51eeb41cf383",
                      "transactionIndex": 227
                    },
                    {
                      "...": "output truncated. Returns up to 1000 token transfers."
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "name": "ERC-721 token transfers",
          "summary": "Return all ERC-721 token transfers to or from a given address",
          "params": [
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            },
            {
              "name": "address",
              "value": "0x3d31c409c48fee50c2e5b9a85820291b1e859a9e"
            },
            {
              "name": "blockStart",
              "value": 1
            },
            {
              "name": "blockEnd",
              "value": 14355891
            },
            {
              "name": "addressFilter",
              "value": "SENDER_OR_RECEIVER"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "blockStart": 1,
              "blockEnd": 14355891,
              "blocks": [
                {
                  "blockHash": "0x84210a366e05d2cb7ac1674901e259620c5485ccfa079618c2b07d5c5466dc3d",
                  "blockNumber": 14355891,
                  "blockTimestamp": 1646872195,
                  "tokenTransfers": [
                    {
                      "tokenAddress": "0x4bb08998a697d0db666783ba5b56e85b33ba262f",
                      "tokenType": "erc721",
                      "from": "0x0000000000000000000000000000000000000000",
                      "to": "0x3d31c409c48fee50c2e5b9a85820291b1e859a9e",
                      "tokenID": "4404",
                      "transactionHash": "0xedb1cd88557ca9f4c5057ad2b237b1427208bc6820005e73535466c1b2bc1884",
                      "transactionIndex": 90
                    },
                    {
                      "tokenAddress": "0x4bb08998a697d0db666783ba5b56e85b33ba262f",
                      "tokenType": "erc721",
                      "from": "0x0000000000000000000000000000000000000000",
                      "to": "0x3d31c409c48fee50c2e5b9a85820291b1e859a9e",
                      "tokenID": "4405",
                      "transactionHash": "0xedb1cd88557ca9f4c5057ad2b237b1427208bc6820005e73535466c1b2bc1884",
                      "transactionIndex": 90
                    },
                    {
                      "tokenAddress": "0x4bb08998a697d0db666783ba5b56e85b33ba262f",
                      "tokenType": "erc721",
                      "from": "0x0000000000000000000000000000000000000000",
                      "to": "0x3d31c409c48fee50c2e5b9a85820291b1e859a9e",
                      "tokenID": "4406",
                      "transactionHash": "0xedb1cd88557ca9f4c5057ad2b237b1427208bc6820005e73535466c1b2bc1884",
                      "transactionIndex": 90
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "coinbaseCloud_getTransactionByHash",
      "paramStructure": "by-name",
      "summary": "Get transfers initiated by a transaction",
      "description": "Returns all transfers caused by the transaction identified by the input transaction hash. This includes all internal transactions as well as all token transfers that were triggered by the transaction. \n\n **Use cases:** \n - Get complete data for a transaction \n - Get all the internal transactions and token transfers triggered by a transaction \n\n\n **Constraints:** \n\n - Static calls among smart contracts can result in zero balance transfers in Ethereum. Such transfers are excluded from the output. \n - This API doesn't currently support pagination. All the data for the transaction will be returned in a single call.",
      "tags": [
        {
          "name": "transfers"
        }
      ],
      "params": [
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "transactionHash",
          "summary": "Transaction hash",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "result",
        "summary": "Returned transactions",
        "description": "Returns the given transaction with all associated internal transactions and token transfers.",
        "schema": {
          "$ref": "#/components/schemas/Transaction"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "ETH transfer",
          "summary": "Return transactions resulting from an ETH transfer.",
          "params": [
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            },
            {
              "name": "transactionHash",
              "value": "0xb407e98dcbf5c2a3b22809940784440cb1d909d9177d0f7dd859a21672ca65a3"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "transaction": {
                "transactionHash": "0xb407e98dcbf5c2a3b22809940784440cb1d909d9177d0f7dd859a21672ca65a3",
                "transactionIndex": 84,
                "from": "0x848176950e1ddf51085f264617203e6696d9a36c",
                "to": "0xf66ced605fb69b3fa490cb83b713fcb2f554b512",
                "value": "124101199128327938",
                "gasLimit": 21000,
                "gasPrice": 33063676112,
                "gasUsed": 21000,
                "status": "1",
                "input": "0x",
                "nonce": 27,
                "blockHash": "0x34f7c346ce0cc29dd1c3f645b6816e04c9856dc66dab2e6f27c4748e192a102c",
                "blockNumber": 14360907,
                "blockTimestamp": 1646939319,
                "internalTransactions": [
                  {
                    "traceType": "CALL",
                    "from": "0x848176950e1ddf51085f264617203e6696d9a36c",
                    "to": "0xf66ced605fb69b3fa490cb83b713fcb2f554b512",
                    "value": "124101199128327938"
                  }
                ]
              }
            }
          }
        },
        {
          "name": "ERC-721 transfer",
          "summary": "Return transactions resulting from an ERC-721 transfer.",
          "params": [
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            },
            {
              "name": "transactionHash",
              "value": "0xdd0971856280e6e4db0ce31072b9780c4c3f96d70351d5b7ef3edf924583d2c6"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "transaction": {
                "transactionHash": "0xdd0971856280e6e4db0ce31072b9780c4c3f96d70351d5b7ef3edf924583d2c6",
                "transactionIndex": 96,
                "from": "0xf88ad3b265a92acfc9f7157f927950dc5317cae5",
                "to": "0x00000000a50bb64b4bbeceb18715748dface08af",
                "value": "10000000000000000",
                "gasLimit": 239976,
                "gasPrice": 23192015945,
                "gasUsed": 215360,
                "status": "1",
                "input": "0x0da642e3ed481b119cc212b6f1c9bef04e3211ab03b6622941eeaf5760607ead7e0a152f8b9987e95174fc32af701beb95fc2c3158ae81f246fb6f7cabbcbb0ced7b2f4272d9d02bd1da8a91f77658516e7bc301c009ff4bd73f5a65c0fe4ac0ede825c96467d54573f3df0e8b974f000000000000000000000000000000000000000000000000000000000000043962326ebd31040358f1366dbadb386e898cfea9c9d2e741697be05272dc33b5b543f3fb46000000002386f26fc10000",
                "nonce": 130,
                "blockHash": "0x84210a366e05d2cb7ac1674901e259620c5485ccfa079618c2b07d5c5466dc3d",
                "blockNumber": 14355891,
                "blockTimestamp": 1646872195,
                "internalTransactions": [
                  {
                    "traceType": "CALL",
                    "from": "0xf88ad3b265a92acfc9f7157f927950dc5317cae5",
                    "to": "0x00000000a50bb64b4bbeceb18715748dface08af",
                    "value": "10000000000000000",
                    "gasLimit": 216368
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x00000000a50bb64b4bbeceb18715748dface08af",
                    "to": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "value": "10000000000000000",
                    "gasLimit": 203117
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x0000000000000000000000000000000000000001",
                    "value": "0",
                    "gasLimit": 165004
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                    "value": "0",
                    "gasLimit": 148219
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x5b3256965e7c3cf26e11fcaf296dfc8807c01073",
                    "value": "950000000000000",
                    "gasLimit": 2300
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xaf5760607ead7e0a152f8b9987e95174fc32af70",
                    "value": "9050000000000000",
                    "gasLimit": 2300
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                    "value": "0",
                    "gasLimit": 103863
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xf729cb7083f5367056e2f2d376a3451260a00cfe",
                    "value": "0",
                    "gasLimit": 98366
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xf729cb7083f5367056e2f2d376a3451260a00cfe",
                    "value": "0",
                    "gasLimit": 94230
                  },
                  {
                    "traceType": "CALL",
                    "from": "0xf729cb7083f5367056e2f2d376a3451260a00cfe",
                    "to": "0xf9e266af4bca5890e2781812cc6a6e89495a79f2",
                    "value": "0",
                    "gasLimit": 89570
                  },
                  {
                    "traceType": "CALL",
                    "from": "0xf729cb7083f5367056e2f2d376a3451260a00cfe",
                    "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                    "value": "0",
                    "gasLimit": 82851
                  },
                  {
                    "traceType": "CALL",
                    "from": "0xf729cb7083f5367056e2f2d376a3451260a00cfe",
                    "to": "0xbaf2127b49fc93cbca6269fade0f7f31df4c88a7",
                    "value": "0",
                    "gasLimit": 79157
                  },
                  {
                    "traceType": "CALL",
                    "from": "0xf729cb7083f5367056e2f2d376a3451260a00cfe",
                    "to": "0x0da642e3ed481b119cc212b6f1c9bef04e3211ab",
                    "value": "0",
                    "gasLimit": 74247
                  }
                ],
                "tokenTransfers": [
                  {
                    "tokenAddress": "0x0da642e3ed481b119cc212b6f1c9bef04e3211ab",
                    "tokenType": "erc721",
                    "from": "0xaf5760607ead7e0a152f8b9987e95174fc32af70",
                    "to": "0xf88ad3b265a92acfc9f7157f927950dc5317cae5",
                    "tokenID": "1081"
                  }
                ]
              }
            }
          }
        },
        {
          "name": "ERC-20 swap",
          "summary": "Return transactions resulting from an ERC-20 swap.",
          "params": [
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            },
            {
              "name": "transactionHash",
              "value": "0xb7ff063e414059e41ab3acc69e4a08b18438df49c847977ca5bdcd012121c1b9"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "transaction": {
                "transactionHash": "0xb7ff063e414059e41ab3acc69e4a08b18438df49c847977ca5bdcd012121c1b9",
                "transactionIndex": 14,
                "from": "0x8e8f818d3371f797a2db7edb32803607c8b3c6a9",
                "to": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                "value": "0",
                "gasLimit": 300000,
                "gasPrice": 59184147559,
                "gasUsed": 99851,
                "status": "1",
                "input": "0xce2e62ff000000000000000000000000000000000000000000000355a627675139e0000000000000000000000000000000000000000000000000000021f31cc480121600000000000000000000000000611cde65dea90918c0078ac0400a72b0d25b9bb1000000000000000000000000408e41876cccdc0f92210600ef50372656052a3800000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000062294499",
                "nonce": 11131,
                "blockHash": "0x78956753e993db281b4e8217229b74a64e095135f06cf4ef23606de934651605",
                "blockNumber": 14355849,
                "blockTimestamp": 1646871637,
                "internalTransactions": [
                  {
                    "traceType": "CALL",
                    "from": "0x8e8f818d3371f797a2db7edb32803607c8b3c6a9",
                    "to": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                    "value": "0",
                    "gasLimit": 277460
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                    "to": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "value": "0",
                    "gasLimit": 265326
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                    "to": "0x408e41876cccdc0f92210600ef50372656052a38",
                    "value": "0",
                    "gasLimit": 258369
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                    "to": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "value": "0",
                    "gasLimit": 241818
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "to": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                    "value": "0",
                    "gasLimit": 224736
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "to": "0x408e41876cccdc0f92210600ef50372656052a38",
                    "value": "0",
                    "gasLimit": 211456
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "to": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                    "value": "0",
                    "gasLimit": 210394
                  }
                ],
                "tokenTransfers": [
                  {
                    "tokenAddress": "0x408e41876cccdc0f92210600ef50372656052a38",
                    "tokenType": "erc20",
                    "from": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                    "to": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "value": "15747045346607196274688"
                  },
                  {
                    "tokenAddress": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                    "tokenType": "erc20",
                    "from": "0x611cde65dea90918c0078ac0400a72b0d25b9bb1",
                    "to": "0x98c3d3183c4b8a650614ad179a1a98be0a8d6b8e",
                    "value": "2448181478250605140"
                  }
                ]
              }
            }
          }
        },
        {
          "name": "ERC-721 sale",
          "summary": "Return transactions resulting from an ERC-721 sale.",
          "params": [
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            },
            {
              "name": "transactionHash",
              "value": "0xb67be27ff44ba97f39fa68953350adade5fdbd983571a3b2b81080565d7744a3"
            }
          ],
          "result": {
            "name": "result",
            "value": {
              "transaction": {
                "transactionHash": "0xb67be27ff44ba97f39fa68953350adade5fdbd983571a3b2b81080565d7744a3",
                "transactionIndex": 225,
                "from": "0xeb016b0b8976a8a9b56d0d48c98d2cffb0459226",
                "to": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                "value": "389000000000000000",
                "gasLimit": 258613,
                "gasPrice": 22528875897,
                "gasUsed": 193992,
                "status": "1",
                "input": "0xab834bab0000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000eb016b0b8976a8a9b56d0d48c98d2cffb0459226000000000000000000000000605dd719317f9236277fd4dcc7e8cadff38d1dcb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f268357a8c2552623316e2562d90e642bb538e5000000000000000000000000605dd719317f9236277fd4dcc7e8cadff38d1dcb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c01073000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000566017061a08000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000622943ca00000000000000000000000000000000000000000000000000000000000000002a3740ff6f969f359068cc9d9f12340bb634b3b24c9d79067af4f9b2b3f1ca0800000000000000000000000000000000000000000000000000000000000003e80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000566017061a080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006229346b0000000000000000000000000000000000000000000000000000000062325850bc19a3b1b00ae00728e35de79af17c5b0abb96195b8f320136beaa4abfd7da4fa000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b20000000000000000000000000000000000000000000000000000000000000001b000000000000000000000000000000000000000000000000000000000000001bbef4356df39df54574e8a1c4aebd0add6c2534880b29972fd0de014b7f71f11a5ebd6da0ea7ac2cc11bda801fe5fd6c923e9afe6a89dbc8794288e5359e38763bef4356df39df54574e8a1c4aebd0add6c2534880b29972fd0de014b7f71f11a5ebd6da0ea7ac2cc11bda801fe5fd6c923e9afe6a89dbc8794288e5359e38763000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a5950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eb016b0b8976a8a9b56d0d48c98d2cffb04592260000000000000000000000008d609bd201beaea7dccbfbd9c22851e23da686910000000000000000000000000000000000000000000000000000000000000901000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a595000000000000000000000000605dd719317f9236277fd4dcc7e8cadff38d1dcb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000008d609bd201beaea7dccbfbd9c22851e23da686910000000000000000000000000000000000000000000000000000000000000901000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "nonce": 36,
                "blockHash": "0x78956753e993db281b4e8217229b74a64e095135f06cf4ef23606de934651605",
                "blockNumber": 14355849,
                "blockTimestamp": 1646871637,
                "internalTransactions": [
                  {
                    "traceType": "CALL",
                    "from": "0xeb016b0b8976a8a9b56d0d48c98d2cffb0459226",
                    "to": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "value": "389000000000000000",
                    "gasLimit": 219285
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x0000000000000000000000000000000000000001",
                    "value": "0",
                    "gasLimit": 180920
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                    "value": "0",
                    "gasLimit": 163958
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x5b3256965e7c3cf26e11fcaf296dfc8807c01073",
                    "value": "38900000000000000",
                    "gasLimit": 2300
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x605dd719317f9236277fd4dcc7e8cadff38d1dcb",
                    "value": "350100000000000000",
                    "gasLimit": 2300
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                    "value": "0",
                    "gasLimit": 119602
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x7ec65765408e188666097f9b7267f8d0a9dd0c87",
                    "value": "0",
                    "gasLimit": 114105
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7f268357a8c2552623316e2562d90e642bb538e5",
                    "to": "0x7ec65765408e188666097f9b7267f8d0a9dd0c87",
                    "value": "0",
                    "gasLimit": 109969
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7ec65765408e188666097f9b7267f8d0a9dd0c87",
                    "to": "0xf9e266af4bca5890e2781812cc6a6e89495a79f2",
                    "value": "0",
                    "gasLimit": 105063
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7ec65765408e188666097f9b7267f8d0a9dd0c87",
                    "to": "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
                    "value": "0",
                    "gasLimit": 98102
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7ec65765408e188666097f9b7267f8d0a9dd0c87",
                    "to": "0xbaf2127b49fc93cbca6269fade0f7f31df4c88a7",
                    "value": "0",
                    "gasLimit": 94408
                  },
                  {
                    "traceType": "CALL",
                    "from": "0x7ec65765408e188666097f9b7267f8d0a9dd0c87",
                    "to": "0x8d609bd201beaea7dccbfbd9c22851e23da68691",
                    "value": "0",
                    "gasLimit": 89260
                  }
                ],
                "tokenTransfers": [
                  {
                    "tokenAddress": "0x8d609bd201beaea7dccbfbd9c22851e23da68691",
                    "tokenType": "erc721",
                    "from": "0x605dd719317f9236277fd4dcc7e8cadff38d1dcb",
                    "to": "0xeb016b0b8976a8a9b56d0d48c98d2cffb0459226",
                    "tokenID": "2305"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "name": "coinbaseCloud_getTokenMetadata",
      "paramStructure": "by-name",
      "summary": "Get balance for multiple account addresses across one or more tokens",
      "description": "Get accurate balance for multiple account addresses across one or more tokens within a single blockchain and network. The balance incorporates transactions, internal transfers and all supported token transfers. Supports ERC-20 and ERC-721. This API is meant to be our primary API to get balances. A more simple and lower latency API that just fetches balance for a single address and token is `getSingleBalance`. \n\n **Use cases:**\n - Get balances for one or many addresses in a single call \n - Get balances for all the tokens an account address may hold \n - Get balances for all the tokens a contract may hold  \n\n\n **Constraints:** \n - Only up to 10 addresses are supported per API call. Only up to 10 tokens are supported per address per API call. These limits will be increased with pagination support incrementally. \n - Balances can be fetched for a single protocol and network using this API. Future variants may support fetching balance across networks for a protocol, or even across all supported protocols.",
      "tags": [
        {
          "name": "balances"
        }
      ],
      "params": [
        {
          "name": "addressAndContractList",
          "summary": "List of addresses and token identifiers",
          "description": "List of account or contact addresses and token identifiers. For Ethereum the token identifier is the token contract address.",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AddressAndContractList"
          }
        },
        {
          "name": "blockchain",
          "summary": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc.",
          "description": "E.g. Ethereum, Bitcoin, Optimism, Arbitrum, etc. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "network",
          "summary": "E.g. Mainnet, testnet",
          "description": "E.g. Mainnet, testnet. Currently only supports Ethereum.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "balances",
        "summary": "Returned list of balance amounts",
        "description": "A list of balance amounts for the given token identifier and Block range in which the balances were computed. Note that Start is always genesis for this API.",
        "schema": {
          "$ref": "#/components/schemas/GetBalancesResponse"
        }
      },
      "errors": [
        {
          "code": -32602,
          "message": "Incorrect number of input params. Please check the spec and ensure all required params are provided."
        }
      ],
      "examples": [
        {
          "name": "USDC & DAI (ERC-20)",
          "summary": "Retrieve balances for USDC and DAI",
          "params": [
            {
              "name": "addressAndContractList",
              "value": [
                {
                  "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
                  "contract": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
                },
                {
                  "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
                  "contract": "0x6b175474e89094c44da98b954eedeac495271d0f"
                }
              ]
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "balances",
            "value": [
              {
                "blockHeight": 14794598,
                "address": "0xdf0635793e91d4f8e7426dbd9ed08471186f428d",
                "tokenBalances": [
                  {
                    "contract": "0x6b175474e89094c44da98b954eedeac495271d0f",
                    "amount": 1871941363914734149,
                    "decimals": 18
                  },
                  {
                    "contract": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                    "amount": 64014142,
                    "decimals": 6
                  }
                ]
              }
            ]
          }
        },
        {
          "name": "NFT (ERC-721)",
          "summary": "Retrieve NFT tokens",
          "params": [
            {
              "name": "addressAndContractList",
              "value": [
                {
                  "address": "0xa3e90da6c1d5ea0b1b4e881d1eaaaaaaf3c25cc2",
                  "contract": "0x5180db8F5c931aaE63c74266b211F580155ecac8"
                }
              ]
            },
            {
              "name": "blockchain",
              "value": "Ethereum"
            },
            {
              "name": "network",
              "value": "Mainnet"
            }
          ],
          "result": {
            "name": "balances",
            "value": [
              {
                "blockHeight": 14794052,
                "address": "0xa3e90da6c1d5ea0b1b4e881d1eaaaaaaf3c25cc2",
                "tokenBalances": [
                  {
                    "contract": "0x5180db8F5c931aaE63c74266b211F580155ecac8",
                    "amount": 3,
                    "decimals": 1
                  }
                ]
              }
            ]
          }
        }
      ]
    }
  ],
  "components": {
    "contentDescriptors": {},
    "schemas": {
      "Address": {
        "name": "address",
        "description": "Account address",
        "schema": {
          "type": "string"
        }
      },
      "Contract": {
        "name": "contract",
        "description": "Token identifier",
        "schema": {
          "type": "string"
        }
      },
      "AddressAndContract": {
        "type": "object",
        "required": [
          "address",
          "contract"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "AddressAndContractList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AddressAndContract"
        }
      },
      "TokenBalance": {
        "type": "object",
        "required": [
          "contract",
          "amount",
          "decimals"
        ],
        "properties": {
          "contract": {
            "type": "string",
            "$ref": "#/components/schemas/Contract"
          },
          "amount": {
            "description": "Balance Amount (For ERC-721 it is the number of tokens).",
            "type": "integer"
          },
          "decimals": {
            "description": "Unit (decimals for ERC-20).",
            "type": "integer"
          }
        }
      },
      "BlockHeight": {
        "name": "blockHeight",
        "description": "Block range in which the balances were computed. Start is genesis.",
        "schema": {
          "type": "integer"
        }
      },
      "Balance": {
        "type": "object",
        "required": [
          "blockHeight",
          "address",
          "tokenBalances"
        ],
        "properties": {
          "blockHeight": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockHeight"
          },
          "address": {
            "type": "string",
            "$ref": "#/components/schemas/Address"
          },
          "tokenBalances": {
            "type": "array",
            "description": "Balance of the native cryptocurrency (ETH, BTC, etc) for the blockchain and network. Balance is returned in the smallest possible unit.",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "GetBalancesResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Balance"
        }
      },
      "GetSingleBalanceResponse": {
        "type": "object",
        "required": [
          "address",
          "tokenBalance"
        ],
        "properties": {
          "address": {
            "type": "string",
            "$ref": "#/components/schemas/Address"
          },
          "tokenBalance": {
            "type": "object",
            "description": "Balance of the native cryptocurrency (ETH, BTC, etc) for the blockchain and network. Balance is returned in the smallest possible unit.",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "Owner": {
        "name": "owner",
        "description": "Owner address",
        "schema": {
          "type": "string"
        }
      },
      "Spender": {
        "name": "spender",
        "description": "Spender address",
        "schema": {
          "type": "string"
        }
      },
      "Allowance": {
        "type": "object",
        "required": [
          "owner",
          "spender",
          "contracts"
        ],
        "properties": {
          "owner": {
            "type": "string",
            "$ref": "#/components/schemas/Owner"
          },
          "spender": {
            "type": "string",
            "$ref": "#/components/schemas/Spender"
          },
          "contracts": {
            "type": "array",
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "Allowances": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Allowance"
        }
      },
      "AllowancesResponse": {
        "type": "object",
        "required": [
          "blockHeight",
          "owner",
          "spender",
          "tokenAllowances"
        ],
        "properties": {
          "blockHeight": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockHeight"
          },
          "owner": {
            "type": "string",
            "$ref": "#/components/schemas/Owner"
          },
          "spender": {
            "type": "string",
            "$ref": "#/components/schemas/Spender"
          },
          "tokenAllowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenBalance"
            }
          }
        }
      },
      "GetTokenAllowancesResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AllowancesResponse"
        }
      },
      "InternalTransaction": {
        "type": "object",
        "required": [
          "traceType",
          "from",
          "to",
          "value"
        ],
        "properties": {
          "traceType": {
            "type": "string",
            "description": "Type of internal transaction, e.g. `CREATE`, `CALL`, `CALLCODE`, `DELEGATECALL`, `SUICIDE`"
          },
          "from": {
            "type": "string",
            "$ref": "#/components/schemas/From"
          },
          "to": {
            "type": "string",
            "$ref": "#/components/schemas/To"
          },
          "value": {
            "type": "string",
            "$ref": "#/components/schemas/Value"
          },
          "gasLimit": {
            "type": "integer",
            "$ref": "#/components/schemas/GasLimit"
          }
        }
      },
      "TokenTransfer": {
        "type": "object",
        "required": [
          "tokenAddress",
          "tokenType",
          "from",
          "to",
          "value"
        ],
        "properties": {
          "tokenAddress": {
            "type": "string",
            "description": "Address location for the token contract"
          },
          "tokenType": {
            "type": "string",
            "description": "`erc20` or `erc721`"
          },
          "from": {
            "type": "string",
            "$ref": "#/components/schemas/From"
          },
          "to": {
            "type": "string",
            "$ref": "#/components/schemas/To"
          },
          "value": {
            "type": "string",
            "description": "For ERC-20, gives quantity of tokens transferred. For ERC-721, gives list of token IDs of the token transferred"
          },
          "transactionHash": {
            "type": "string",
            "description": "Hash of the transactions this log was created from"
          },
          "transactionIndex": {
            "type": "integer",
            "description": "Integer of the transactions index position log was created from"
          }
        }
      },
      "BlockHash": {
        "name": "blockHash",
        "type": "string",
        "description": "Block's hash identifier"
      },
      "BlockNumber": {
        "name": "blockNumber",
        "type": "integer",
        "description": "Block's number"
      },
      "BlockTimestamp": {
        "name": "blockTimestamp",
        "type": "integer",
        "description": "Timestamp of when block was mined"
      },
      "From": {
        "name": "from",
        "type": "string",
        "description": "Origin address"
      },
      "To": {
        "name": "to",
        "type": "string",
        "description": "Destination address"
      },
      "Value": {
        "name": "value",
        "type": "string",
        "description": "Value in native blockchain currency"
      },
      "GasLimit": {
        "name": "gasLimit",
        "type": "integer",
        "description": "Value in native blockchain currency"
      },
      "Transaction": {
        "type": "object",
        "required": [
          "transactionHash",
          "transactionIndex",
          "from",
          "to",
          "value",
          "gasLimit",
          "gasPrice",
          "gasUsed",
          "status",
          "input",
          "nonce",
          "blockHash",
          "blockNumber",
          "blockTimestamp"
        ],
        "properties": {
          "transactionHash": {
            "type": "string",
            "description": "Transaction's hash identifier"
          },
          "transactionIndex": {
            "type": "integer",
            "description": "Transaction index in block"
          },
          "from": {
            "type": "string",
            "$ref": "#/components/schemas/From"
          },
          "to": {
            "type": "string",
            "$ref": "#/components/schemas/To"
          },
          "value": {
            "type": "string",
            "$ref": "#/components/schemas/Value"
          },
          "gasLimit": {
            "type": "integer",
            "$ref": "#/components/schemas/GasLimit"
          },
          "gasPrice": {
            "type": "integer",
            "description": "Transaction's gas price in native blockchain currency"
          },
          "gasUsed": {
            "type": "integer",
            "description": "Amount of gas used in transaction"
          },
          "status": {
            "type": "string",
            "description": "`Success`, `Fail`, `Pending`, `Unknown`"
          },
          "input": {
            "type": "string",
            "description": "Transaction's input data"
          },
          "nonce": {
            "type": "integer",
            "description": "Transaction's nonce"
          },
          "blockHash": {
            "type": "string",
            "$ref": "#/components/schemas/BlockHash"
          },
          "blockNumber": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockNumber"
          },
          "blockTimestamp": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockTimestamp"
          },
          "internalTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InternalTransaction"
            }
          },
          "tokenTransfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenTransfer"
            }
          }
        }
      },
      "BlockTransaction": {
        "type": "object",
        "required": [
          "blockHash",
          "blockNumber",
          "blockTimestamp",
          "transactions"
        ],
        "properties": {
          "blockHash": {
            "type": "string",
            "$ref": "#/components/schemas/BlockHash"
          },
          "blockNumber": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockNumber"
          },
          "blockTimestamp": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockTimestamp"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "GetTransactionsByAddressResponse": {
        "type": "object",
        "required": [
          "blockStart",
          "blockEnd",
          "blocks"
        ],
        "properties": {
          "blockStart": {
            "type": "integer",
            "description": "The starting block number"
          },
          "blockEnd": {
            "type": "integer",
            "description": "The ending block number"
          },
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockTransaction"
            }
          }
        }
      },
      "BlockTokens": {
        "type": "object",
        "required": [
          "blockHash",
          "blockNumber",
          "blockTimestamp",
          "tokenTransfers"
        ],
        "properties": {
          "blockHash": {
            "type": "string",
            "$ref": "#/components/schemas/BlockHash"
          },
          "blockNumber": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockNumber"
          },
          "blockTimestamp": {
            "type": "integer",
            "$ref": "#/components/schemas/BlockTimestamp"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenTransfer"
            }
          }
        }
      },
      "GetTransfersByAddressResponse": {
        "type": "object",
        "required": [
          "blockStart",
          "blockEnd",
          "blocks"
        ],
        "properties": {
          "blockStart": {
            "type": "integer",
            "description": "The starting block number"
          },
          "blockEnd": {
            "type": "integer",
            "description": "The ending block number"
          },
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlockTokens"
            }
          }
        }
      }
    }
  }
}